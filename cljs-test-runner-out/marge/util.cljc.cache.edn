{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name marge.util, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {balance-when {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/util.cljc", :line 3, :column 7, :end-line 3, :end-column 19, :arglists (quote ([f balancer col]))}, :name marge.util/balance-when, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/util.cljc", :end-column 19, :method-params ([f balancer col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f balancer col]))}, balance-at {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/util.cljc", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([f col]))}, :name marge.util/balance-at, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/util.cljc", :end-column 17, :method-params ([f col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f col]))}, longest {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/util.cljc", :line 17, :column 7, :end-line 17, :end-column 14, :arglists (quote ([col]))}, :name marge.util/longest, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/util.cljc", :end-column 14, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}