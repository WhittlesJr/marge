{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {join clojure.string, triml clojure.string}, :excludes #{}, :name marge.core, :imports nil, :requires {clojure.string clojure.string, marge.util marge.util}, :cljs.spec/speced-vars [], :uses {join clojure.string, longest marge.util, balance-when marge.util, triml clojure.string, balance-at marge.util}, :defs {anchor {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 81, :column 8, :end-line 81, :end-column 14, :private true, :arglists (quote ([value]))}, :private true, :name marge.core/anchor, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 14, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, blockquote {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 27, :column 8, :end-line 27, :end-column 18, :private true, :arglists (quote ([value]))}, :private true, :name marge.core/blockquote, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 18, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, column-start {:name marge.core/column-start, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 20, :column 1, :end-line 20, :end-column 32, :private true, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 20, :column 20, :end-line 20, :end-column 32, :private true}, :tag string}, list-entry {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 45, :column 8, :end-line 45, :end-column 18, :private true, :arglists (quote ([l]))}, :private true, :name marge.core/list-entry, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 18, :method-params ([l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([l]))}, list- {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 35, :column 8, :end-line 35, :end-column 13, :private true, :arglists (quote ([depth list-fn v]))}, :private true, :name marge.core/list-, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 13, :method-params ([depth list-fn v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([depth list-fn v]))}, row {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 142, :column 8, :end-line 142, :end-column 11, :private true, :arglists (quote ([cells]))}, :private true, :name marge.core/row, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 11, :method-params ([cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cells]))}, column-end {:name marge.core/column-end, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 16, :column 1, :end-line 16, :end-column 30, :private true, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 16, :column 20, :end-line 16, :end-column 30, :private true}, :tag string}, unordered-list {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 67, :column 8, :end-line 67, :end-column 22, :private true, :arglists (quote ([col] [col depth])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col depth]), :arglists ([col] [col depth]), :arglists-meta (nil nil)}}, :private true, :name marge.core/unordered-list, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col depth]), :arglists ([col] [col depth]), :arglists-meta (nil nil)}, :method-params ([col] [col depth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists ([col] [col depth])}, markdown {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 181, :column 7, :end-line 181, :end-column 15, :arglists (quote ([col])), :doc "Takes a sequence of nodes and produces markdown.", :added "0.1.0"}, :added "0.1.0", :name marge.core/markdown, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col])), :doc "Takes a sequence of nodes and produces markdown."}, end-row {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 106, :column 8, :end-line 106, :end-column 15, :private true, :arglists (quote ([s]))}, :private true, :name marge.core/end-row, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, table {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 148, :column 8, :end-line 148, :end-column 13, :private true, :arglists (quote ([value]))}, :private true, :name marge.core/table, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 13, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, whitespace {:name marge.core/whitespace, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 18, :column 1, :end-line 18, :end-column 30, :private true, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 18, :column 20, :end-line 18, :end-column 30, :private true}, :tag string}, ordered-list {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 55, :column 8, :end-line 55, :end-column 20, :private true, :arglists (quote ([col] [col depth])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col depth]), :arglists ([col] [col depth]), :arglists-meta (nil nil)}}, :private true, :name marge.core/ordered-list, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col depth]), :arglists ([col] [col depth]), :arglists-meta (nil nil)}, :method-params ([col] [col depth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists ([col] [col depth])}, rule {:name marge.core/rule, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 19, :column 1, :end-line 19, :end-column 24, :private true, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 19, :column 20, :end-line 19, :end-column 24, :private true}, :tag any}, code-block {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 85, :column 8, :end-line 85, :end-column 18, :private true, :arglists (quote ([code] [syntax code])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([code] [syntax code]), :arglists ([code] [syntax code]), :arglists-meta (nil nil)}}, :private true, :name marge.core/code-block, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([code] [syntax code]), :arglists ([code] [syntax code]), :arglists-meta (nil nil)}, :method-params ([code] [syntax code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists ([code] [syntax code])}, parse-cells {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 123, :column 8, :end-line 123, :end-column 19, :private true, :arglists (quote ([cells]))}, :private true, :name marge.core/parse-cells, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 19, :method-params ([cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cells]))}, pair->markdown {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 160, :column 8, :end-line 160, :end-column 22, :private true, :arglists (quote ([[node value]]))}, :private true, :name marge.core/pair->markdown, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 22, :method-params ([p__10688]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[node value]]))}, header {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 22, :column 8, :end-line 22, :end-column 14, :private true, :arglists (quote ([depth value]))}, :private true, :name marge.core/header, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 14, :method-params ([depth value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([depth value]))}, linebreak {:name marge.core/linebreak, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 15, :column 1, :end-line 15, :end-column 29, :private true, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 15, :column 20, :end-line 15, :end-column 29, :private true}, :tag string}, column {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 130, :column 8, :end-line 130, :end-column 14, :private true, :arglists (quote ([[column cells]]))}, :private true, :name marge.core/column, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 14, :method-params ([p__10684]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[column cells]]))}, divider {:name marge.core/divider, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 17, :column 1, :end-line 17, :end-column 27, :private true, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 17, :column 20, :end-line 17, :end-column 27, :private true}, :tag string}, pad {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 100, :column 8, :end-line 100, :end-column 11, :private true, :arglists (quote ([padding value]))}, :private true, :name marge.core/pad, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 11, :method-params ([padding value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([padding value]))}, col {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 110, :column 8, :end-line 110, :end-column 11, :private true, :arglists (quote ([padding value]))}, :private true, :name marge.core/col, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 11, :method-params ([padding value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([padding value]))}, strikethrough {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 31, :column 8, :end-line 31, :end-column 21, :private true, :arglists (quote ([value]))}, :private true, :name marge.core/strikethrough, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 21, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, link {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 76, :column 8, :end-line 76, :end-column 12, :private true, :arglists (quote ([{:keys [text url title]}]))}, :private true, :name marge.core/link, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 12, :method-params ([p__10674]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [text url title]}]))}, parse-cell-pair {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 115, :column 8, :end-line 115, :end-column 23, :private true, :arglists (quote ([[c cn]]))}, :private true, :name marge.core/parse-cell-pair, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 23, :method-params ([p__10680]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[c cn]]))}, code {:protocol-inline nil, :meta {:file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :line 91, :column 8, :end-line 91, :end-column 12, :private true, :arglists (quote ([value]))}, :private true, :name marge.core/code, :variadic false, :file "/home/markwoodhall/src/mark/marge/src/marge/core.cljc", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:hr :task :done? :header :title :divider :url :br :cells :text}, :order [:done? :task :text :url :title :header :divider :cells :br :hr]}, :doc "The core namespace contains all of the functions for rendering clojure data structures as\n  markdown.\n\n  The API documentation is available [here](http://markwoodhall.github.io/marge/).\n\n  You can also view [blog posts] (http://markw.xyz/tags/marge/) about marge\n  "}